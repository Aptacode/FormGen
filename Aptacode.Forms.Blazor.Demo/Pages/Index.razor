@page "/"
@using Aptacode.Forms.Shared.Models
@using Aptacode.Forms.Shared.Models.Elements
@using Aptacode.Forms.Shared.Models.Elements.Fields
@using Aptacode.Forms.Shared.Models.Elements.Fields.ValidationRules
@using Aptacode.Forms.Shared.Models.Layout
@using Aptacode.Forms.Shared.ViewModels
@using Aptacode.Forms.Shared.ViewModels.Events

<h1>
    Aptacode.Forms.Blazor.Demo
</h1>
<Divider Type="DividerType.Dashed" />

<Aptacode.Forms.Blazor.Components.Form ViewModel="@FormModel" />

<Divider Type="DividerType.Dashed" />

<Table>
    <TableHeader>
        <Alert Color="Color.Primary" Visible="true">
            Event Log
        </Alert>
        <TableRow>
            <TableHeaderCell>Time</TableHeaderCell>
            <TableHeaderCell>Event</TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
        @foreach (var formEvent in GetRecentEvents())
        {
            <TableRow>
                <TableRowHeader>@formEvent.Time.ToString("HH:mm:ss")</TableRowHeader>
                <TableRowCell>@formEvent.ToString()</TableRowCell>
            </TableRow>
        }
    </TableBody>
</Table>

<Divider Type="DividerType.Dashed" />


@code{
    public FormViewModel FormModel { get; set; }
    public List<FormEventArgs> FormEventLog { get; set; }

    public IEnumerable<FormEventArgs> GetRecentEvents() => FormEventLog.TakeLast(10).Reverse();

    protected override Task OnInitializedAsync()
    {
        FormEventLog = new List<FormEventArgs>();
        FormModel = new FormViewModel(ProgrammaticForm());
        FormModel.OnFormEvent += (s, e) =>
        {
            FormEventLog.Add(e);
            InvokeAsync(StateHasChanged);
        };

        return Task.CompletedTask;
    }

    public static FormModel ProgrammaticForm()
    {
        return new FormModel("form1", "Test Form",
            new[]
            {
                new FormGroupModel("Test Form Group", "Label", new[]
{
                    new FormRowModel("Default", 1, new[]
    {
                        new FormColumnModel("Column1", 1,
                            new HtmlElementModel("Paragraph", ElementLabel.Above("Some HTML Content"),
                                "<h1><em>Test HTML Content</em></h1>\r\n<p>Test</p>\r\n<p><strong><span style=\"background-color: #0000ff;\">Woop</span> woop</strong></p>\r\n<p><span style=\"text-decoration: underline; color: #003366;\">TEST od&nbsp;&nbsp; </span></p>"
                               ))
                    }),
                    new FormRowModel("Default", 1, new[]
    {
                        new FormColumnModel("Default", 1,
                            new TextFieldModel("firstName", ElementLabel.Left("First Name"), "First Name",
                                new[]
                {
                                    new TextFieldLengthValidationRule(EqualityOperator.GreaterThan, 2)
                                })
                            ),
                        new FormColumnModel("", 1,
                            new TextFieldModel("lastName",  ElementLabel.Left("Last Name"), "Last Name",
                                new[]
                {
                                    new TextFieldLengthValidationRule(
                                        EqualityOperator.LessThan | EqualityOperator.EqualTo, 10)
                                })
                            )
                    }),
                    new FormRowModel("Default", 1, new[]
    {
                        new FormColumnModel("", 1,
                            new CheckBoxFieldModel("receiveEmail",  ElementLabel.Above("Do you accept the terms and conditions"),
                                "I Agree", false)
                            )
                    }),
                    new FormRowModel("Default", 1, new[]
    {
                        new FormColumnModel("Default", 1,
                            new ComboBoxFieldModel("yearsOfExperience", ElementLabel.Above("How many years experiance have you got?"), new[] {"0-1", "1-5", "5+"}, "0-1")
                            )
                    }),
                    new FormRowModel("Default", 1, new[]
    {
                        new FormColumnModel("Default", 1,
                            new ButtonElementModel("SubmitButton", ElementLabel.None,
                                "Submit")
                            )
                    })
                })
                            });
    }

}